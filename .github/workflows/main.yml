# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: 
      - 'main' 


jobs:
  conditional_job_check_files:
    runs-on: 'ubuntu-20.04'
    # Declare outputs for next jobs
    outputs:
      docs_changed: ${{ steps.check_file_changed.outputs.docs_changed }}
    steps:
    - uses: actions/checkout@v2
      with:
        # Checkout as many commits as needed for the diff
        fetch-depth: 1
    - shell: pwsh
      id: check_file_changed
      run: |
        $diff = git diff --name-only HEAD~1..HEAD

    
        $SourceDiff = $diff | Where-Object { $_ -match '^docs/' -or $_ -match '.docx$' }
        $HasDiff = $SourceDiff.Length -gt 0

        Write-Host "::set-output name=docs_changed::$HasDiff"

  # Run the job only with "docs_changed" equals "True"
  conditional_job:
    runs-on: 'ubuntu-20.04'
    needs: [ conditional_job_check_files ]
    if: needs.conditional_job_check_files.outputs.docs_changed == 'True'
    steps:
    - uses: actions/checkout@v3

        # Runs a single command using the runners shell
    - name: Build Documentation
      uses: VakuWare/docfx-pdf-action@v1.4.0
      with:
            args: C:\Users\benba\Ben Bar\CV - Ben Bar.docx
    - name: Pushing PDF
      uses: EndBug/add-and-commit@v9 # You can change this to use a specific version.
      with:
    # The arguments for the `git add` command (see the paragraph below for more info)
    # Default: '.'
        add: 'src'



    # The local path to the directory where your repository is located. You should use actions/checkout first to set it up.
    # Default: '.'
        cwd: 'C:\Users\benba\Ben Bar\.git'

        # The message for the commit.
        # Default: 'Commit from GitHub Actions (name of the workflow)'
        message: 'Auto PDF CI/CD'


        # The way the action should handle pathspec errors from the add and remove commands. Three options are available:
        # - ignore -> errors will be logged but the step won't fail
        # - exitImmediately -> the action will stop right away, and the step will fail
        # - exitAtEnd -> the action will go on, every pathspec error will be logged at the end, the step will fail.
        # Default: ignore
        pathspec_error_handling: exitImmediately


        # Whether to push the commit and, if any, its tags to the repo. It can also be used to set the git push arguments (see the paragraph below for more info)
        # Default: true
        push: true

