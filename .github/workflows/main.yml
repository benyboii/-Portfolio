name: CI
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: 
      - 'main' 
jobs:
  conditional_job_check_files:
    runs-on: 'ubuntu-20.04'
    # Declare outputs for next jobs
    outputs:
      docs_changed: ${{ steps.check_file_changed.outputs.docs_changed }}
    steps:
    - uses: actions/checkout@v3
      with:
        # Checkout as many commits as needed for the diff
        fetch-depth: 2
    - shell: pwsh
      id: check_file_changed
      run: |
        $diff = git diff --name-only HEAD^ HEAD
    
        $SourceDiff = $diff | Where-Object { $_ -match '^docs/' -or $_ -match '.docx$' }
        $HasDiff = $SourceDiff.Length -gt 0

        Write-Host "::set-output name=docs_changed::$HasDiff"
  conditional_job:
    runs-on: 'windows-latest'
    needs: [ conditional_job_check_files ]
    if: needs.conditional_job_check_files.outputs.docs_changed == 'True'
    steps:
    - uses: actions/checkout@v3
    - name: Converting docx to pdf
      shell: python
      id: conv_docx_pdf
      run: |
        $docx_path = 'C:\Users\benba\Ben_Bar\CV-Ben_Bar.docx'
        $pdf_path = 'C:\Users\benba\Ben_Bar\CV-Ben_Bar.pdf'
        $word_app = New-Object -ComObject Word.Application
        $document = $word_app.Documents.Open($docx_path)
        $document.SaveAs([ref] $pdf_path, [ref] 17)
        $document.Close() 
    - name: Pushing PDF
      uses: EndBug/add-and-commit@v9 # You can change this to use a specific version.
      with:
        add: 'src'
        cwd: 'C:\Users\benba\Ben_Bar\.git'
        message: 'Auto PDF CI/CD'